# Code generated by internal/ci/github/ci_tool.cue; DO NOT EDIT.

name: test
"on":
  push:
    branches:
      - main
  pull_request: null
  merge_group: null
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
permissions:
  contents: read
env:
  MINIMUM_PYTHON_VERSION: "3.9"
  UV_VERSION: 0.5.15
jobs:
  coverage:
    name: ${{ matrix.os }} / ${{ matrix.python-version }} / coverage
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        os:
          - ubuntu
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
    runs-on: ${{ matrix.os }}-latest
    env:
      OS: ${{ matrix.os }}-latest
      PYTHON: ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Set up uv
        uses: astral-sh/setup-uv@v5
        with:
          version: ${{ env.UV_VERSION }}
          enable-cache: true
      - name: Set up Python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: make install-dev
      - name: Run tests for coverage
        run: make test-w-coverage cov_report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          env_vars: OS,PYTHON
          fail_ci_if_error: true
          verbose: true
  doctests:
    name: ${{ matrix.os }} / 3.9 / doctest
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        os:
          - ubuntu
    runs-on: ${{ matrix.os }}-latest
    env:
      OS: ${{ matrix.os }}-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Set up uv
        uses: astral-sh/setup-uv@v5
        with:
          version: ${{ env.UV_VERSION }}
          enable-cache: true
      - name: Set up Python ${{ env.MINIMUM_PYTHON_VERSION }}
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.MINIMUM_PYTHON_VERSION }}
      - name: Install dependencies
        run: make install-dev
      - name: make doc-tests
        run: make doc-tests cov_report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          env_vars: OS,PYTHON,TESTTYPE
          fail_ci_if_error: true
          verbose: true
        env:
          PYTHON: ${{ env.MINIMUM_PYTHON_VERSION }}
          TESTTYPE: doctest
  minimal:
    runs-on: ubuntu-latest
    name: ubuntu / 3.9 / minimal-versions
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Set up uv
        uses: astral-sh/setup-uv@v5
        with:
          version: ${{ env.UV_VERSION }}
          enable-cache: true
      - name: Set up Python ${{ env.MINIMUM_PYTHON_VERSION }}
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.MINIMUM_PYTHON_VERSION }}
      - name: install lowest direct dependencies
        run: uv sync --resolution lowest-direct --all-extras --all-packages --dev
      - name: make test
        run: make test
  test-check:
    if: always()
    needs:
      - coverage
      - doctests
      - minimal
    runs-on: ubuntu-latest
    permissions: {}
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
