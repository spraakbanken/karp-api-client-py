{"openapi":"3.1.0","info":{"title":"Karp API","description":"Karp is Spr√•kbanken's tool for editing structural data.\n\nThe\n        main goal of Karp is to be great for working with **lexical** data, but will work with \n        other data as well.\n\n[Read more here](https://spraakbanken.gu.se/en/tools/karp)","version":"7.0.0"},"servers":[{"url":"/karp/v7"}],"paths":{"/entries/{resource_id}/{entry_id}/{version}":{"get":{"tags":["History"],"summary":"Get entry history","operationId":"get_history_for_entry_entries__resource_id___entry_id___version__get","security":[{"APIKeyQuery":[]}],"parameters":[{"name":"resource_id","in":"path","required":true,"schema":{"type":"string","title":"Resource Id"}},{"name":"entry_id","in":"path","required":true,"schema":{"examples":["01BJQMF54D093DXEAWZ6JYRPAQ"],"title":"Entry Id"}},{"name":"version","in":"path","required":true,"schema":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Version"}},{"name":"authorization","in":"header","required":false,"schema":{"title":"Authorization"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EntryDto"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["Editing"],"summary":"Delete Entry","description":"Delete a entry from a resource.","operationId":"delete_entry_entries__resource_id___entry_id___version__delete","security":[{"HTTPBearer":[]},{"APIKeyQuery":[]}],"parameters":[{"name":"resource_id","in":"path","required":true,"schema":{"type":"string","title":"Resource Id"}},{"name":"entry_id","in":"path","required":true,"schema":{"examples":["01BJQMF54D093DXEAWZ6JYRPAQ"],"title":"Entry Id"}},{"name":"version","in":"path","required":true,"schema":{"type":"integer","title":"Version"}}],"responses":{"204":{"description":"Successful Response"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/entries/{resource_id}/{entry_id}":{"get":{"tags":["History"],"summary":"Get entry","operationId":"get_history_for_entry_entries__resource_id___entry_id__get","security":[{"APIKeyQuery":[]}],"parameters":[{"name":"resource_id","in":"path","required":true,"schema":{"type":"string","title":"Resource Id"}},{"name":"entry_id","in":"path","required":true,"schema":{"examples":["01BJQMF54D093DXEAWZ6JYRPAQ"],"title":"Entry Id"}},{"name":"version","in":"query","required":false,"schema":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Version"}},{"name":"authorization","in":"header","required":false,"schema":{"title":"Authorization"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EntryDto"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"put":{"tags":["Editing"],"summary":"Add Entry","description":"Add a new entry. For data consistency reasons, first generate an ID (ULID), for example using the `create_id` API \n    call. If the request fails, use the same ID to try again, this ensures that the entry body is not added several \n    times. Answers:\n    \n    - 201 created if the entry exists with the same body, at version 1\n    - 400 \n        - if the entry_id exists, but the body is different\n        - if the entry_id  is not valid\n        - if the entry is not valid according to resource settings","operationId":"add_entry_entries__resource_id___entry_id__put","security":[{"HTTPBearer":[]},{"APIKeyQuery":[]}],"parameters":[{"name":"resource_id","in":"path","required":true,"schema":{"type":"string","title":"Resource Id"}},{"name":"entry_id","in":"path","required":true,"schema":{"examples":["01BJQMF54D093DXEAWZ6JYRPAQ"],"title":"Entry Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EntryAdd"}}}},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EntryAddResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"post":{"tags":["Editing"],"summary":"Update Entry","operationId":"update_entry_entries__resource_id___entry_id__post","security":[{"HTTPBearer":[]},{"APIKeyQuery":[]}],"parameters":[{"name":"resource_id","in":"path","required":true,"schema":{"type":"string","title":"Resource Id"}},{"name":"entry_id","in":"path","required":true,"schema":{"examples":["01BJQMF54D093DXEAWZ6JYRPAQ"],"title":"Entry Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EntryUpdate"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EntryAddResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/entries/create_id":{"get":{"tags":["Editing"],"summary":"Create Id","description":"Create an ID (ULID) to be used as input for `add/<resource_id>/<entry_id>`.","operationId":"create_id_entries_create_id_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/entries/{resource_id}":{"put":{"tags":["Editing"],"summary":"Add Entry","description":"Depracated, use `add/<resource_id>/<entry_id>` instead.","operationId":"add_entry_entries__resource_id__put","deprecated":true,"security":[{"HTTPBearer":[]},{"APIKeyQuery":[]}],"parameters":[{"name":"resource_id","in":"path","required":true,"schema":{"type":"string","title":"Resource Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EntryAdd"}}}},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EntryAddResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/entries/{resource_id}/preview":{"post":{"summary":"Preview Entry","operationId":"preview_entry_entries__resource_id__preview_post","security":[{"HTTPBearer":[]},{"APIKeyQuery":[]}],"parameters":[{"name":"resource_id","in":"path","required":true,"schema":{"type":"string","title":"Resource Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EntryPreview"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EntryPreviewResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/history/diff/{resource_id}/{entry_id}":{"post":{"tags":["History"],"summary":"Get Diff","operationId":"get_diff_history_diff__resource_id___entry_id__post","security":[{"APIKeyQuery":[]}],"parameters":[{"name":"resource_id","in":"path","required":true,"schema":{"type":"string","title":"Resource Id"}},{"name":"entry_id","in":"path","required":true,"schema":{"examples":["01BJQMF54D093DXEAWZ6JYRPAQ"],"title":"Entry Id"}},{"name":"from_version","in":"query","required":false,"schema":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"From Version"}},{"name":"to_version","in":"query","required":false,"schema":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"To Version"}},{"name":"from_date","in":"query","required":false,"schema":{"anyOf":[{"type":"number"},{"type":"null"}],"title":"From Date"}},{"name":"to_date","in":"query","required":false,"schema":{"anyOf":[{"type":"number"},{"type":"null"}],"title":"To Date"}},{"name":"authorization","in":"header","required":false,"schema":{"title":"Authorization"}}],"requestBody":{"content":{"application/json":{"schema":{"anyOf":[{"type":"object"},{"type":"null"}],"title":"Entry"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EntryDiffDto"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/history/{resource_id}":{"get":{"tags":["History"],"summary":"Get History","operationId":"get_history_history__resource_id__get","security":[{"APIKeyQuery":[]}],"parameters":[{"name":"resource_id","in":"path","required":true,"schema":{"type":"string","title":"Resource Id"}},{"name":"user_id","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"User Id"}},{"name":"entry_id","in":"query","required":false,"schema":{"anyOf":[{"examples":["01BJQMF54D093DXEAWZ6JYRPAQ"]},{"type":"null"}],"title":"Entry Id"}},{"name":"from_date","in":"query","required":false,"schema":{"anyOf":[{"type":"number"},{"type":"null"}],"title":"From Date"}},{"name":"to_date","in":"query","required":false,"schema":{"anyOf":[{"type":"number"},{"type":"null"}],"title":"To Date"}},{"name":"to_version","in":"query","required":false,"schema":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"To Version"}},{"name":"from_version","in":"query","required":false,"schema":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"From Version"}},{"name":"current_page","in":"query","required":false,"schema":{"type":"integer","default":0,"title":"Current Page"}},{"name":"page_size","in":"query","required":false,"schema":{"type":"integer","default":100,"title":"Page Size"}},{"name":"authorization","in":"header","required":false,"schema":{"title":"Authorization"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetHistoryDto"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/query/entries/{resource_id}/{entry_ids}":{"get":{"tags":["Querying"],"summary":"Get Entries By Id","description":"Returns a list of entries matching the given ids","operationId":"Get_entries_by_id_query_entries__resource_id___entry_ids__get","security":[{"APIKeyQuery":[]}],"parameters":[{"name":"resource_id","in":"path","required":true,"schema":{"type":"string","description":"The resource to perform operation on","title":"Resource Id"},"description":"The resource to perform operation on"},{"name":"entry_ids","in":"path","required":true,"schema":{"type":"string","pattern":"^\\w(,\\w)*","description":"Comma-separated. The ids to perform operation on.","title":"Entry Ids"},"description":"Comma-separated. The ids to perform operation on."},{"name":"authorization","in":"header","required":false,"schema":{"title":"Authorization"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EntriesByIdResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/query/stats/{resources}":{"get":{"tags":["Querying"],"summary":"Hits Per Resource, No Entries In Result","operationId":"Hits_per_resource__no_entries_in_result_query_stats__resources__get","security":[{"APIKeyQuery":[]}],"parameters":[{"name":"resources","in":"path","required":true,"schema":{"type":"string","pattern":"^[a-z_0-9\\-]+(,[a-z_0-9\\-]+)*$","description":"A comma-separated list of resource identifiers","title":"Resources"},"description":"A comma-separated list of resource identifiers"},{"name":"q","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"query","description":"The query. If missing, the number of entries in the chosen resource(s) \n            will be returned. See [Query DSL](#section/Query-DSL)"},"description":"The query. If missing, the number of entries in the chosen resource(s) \n            will be returned. See [Query DSL](#section/Query-DSL)"},{"name":"authorization","in":"header","required":false,"schema":{"title":"Authorization"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/QueryStatsResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/query/{resources}":{"get":{"tags":["Querying"],"summary":"Query","description":"Returns a list of entries matching the given query in the given resources. The results are mixed from the given resources.","operationId":"Query_query__resources__get","security":[{"APIKeyQuery":[]}],"parameters":[{"name":"resources","in":"path","required":true,"schema":{"type":"string","pattern":"^[a-z_0-9\\-]+(,[a-z_0-9\\-]+)*$","description":"A comma-separated list of resource identifiers","title":"Resources"},"description":"A comma-separated list of resource identifiers"},{"name":"q","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"query","description":"The query. If missing, all entries in chosen resource(s) will be returned. See [Query DSL](#section/Query-DSL)"},"description":"The query. If missing, all entries in chosen resource(s) will be returned. See [Query DSL](#section/Query-DSL)"},{"name":"from","in":"query","required":false,"schema":{"type":"integer","description":"Specify which entry should be the first returned.","default":0,"title":"From"},"description":"Specify which entry should be the first returned."},{"name":"size","in":"query","required":false,"schema":{"type":"integer","description":"Number of entries in page.","default":25,"title":"Size"},"description":"Number of entries in page."},{"name":"sort","in":"query","required":false,"schema":{"type":"array","items":{"type":"string"},"description":"The `field` to sort by. If missing, default order for each resource will be used.","default":[],"title":"Sort"},"description":"The `field` to sort by. If missing, default order for each resource will be used."},{"name":"lexicon_stats","in":"query","required":false,"schema":{"type":"boolean","description":"Show the hit count per lexicon","default":true,"title":"Lexicon Stats"},"description":"Show the hit count per lexicon"},{"name":"path","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"A dot-separataed path to for returning a specific field in JSON. \n        Only supports one path down into the tree with no indexing.\n        For example, to fetch only the field `baseform` in the entry, use: `?path=entry.baseform`\n        If the selected field is an array, the result will also be wrapped in an array.","title":"Path"},"description":"A dot-separataed path to for returning a specific field in JSON. \n        Only supports one path down into the tree with no indexing.\n        For example, to fetch only the field `baseform` in the entry, use: `?path=entry.baseform`\n        If the selected field is an array, the result will also be wrapped in an array."},{"name":"highlight","in":"query","required":false,"schema":{"type":"boolean","description":"Adds which fields the query matched and a small hit context with <em>-tags for the actual hit","default":false,"title":"Highlight"},"description":"Adds which fields the query matched and a small hit context with <em>-tags for the actual hit"},{"name":"authorization","in":"header","required":false,"schema":{"title":"Authorization"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/QueryResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/resources/permissions":{"get":{"tags":["Resources"],"summary":"List Resource Permissions","operationId":"list_resource_permissions_resources_permissions_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ResourcePermissionDto"},"type":"array","title":"Response List Resource Permissions Resources Permissions Get"}}}}}}},"/resources/":{"get":{"tags":["Resources"],"summary":"Get All Resources","operationId":"get_all_resources_resources__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ResourceProtected"},"type":"array","title":"Response Get All Resources Resources  Get"}}}}}}},"/resources/{resource_id}":{"get":{"tags":["Resources"],"summary":"Get Resource By Resource Id","operationId":"get_resource_by_resource_id_resources__resource_id__get","parameters":[{"name":"resource_id","in":"path","required":true,"schema":{"type":"string","title":"Resource Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResourcePublic"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/stats/{resource_id}/{field}":{"get":{"tags":["Statistics"],"summary":"Get Field Values","description":"Return all possible values for `<field>` in `<resource_id>`","operationId":"get_field_values_stats__resource_id___field__get","security":[{"APIKeyQuery":[]}],"parameters":[{"name":"resource_id","in":"path","required":true,"schema":{"type":"string","title":"Resource Id"}},{"name":"field","in":"path","required":true,"schema":{"type":"string","title":"Field"}},{"name":"authorization","in":"header","required":false,"schema":{"title":"Authorization"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/StatisticsDto"},"title":"Response Get Field Values Stats  Resource Id   Field  Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/inflectionrules/inflection/generate_inflection_table":{"get":{"summary":"Given a lemma and an inflection class, generate an inflection table.","operationId":"generate_inflection_table_inflectionrules_inflection_generate_inflection_table_get","security":[{"APIKeyQuery":[]}],"parameters":[{"name":"lemma","in":"query","required":true,"schema":{"type":"string","title":"Lemma"}},{"name":"inflection_class","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Inflection Class"}},{"name":"wordforms","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Wordforms"}},{"name":"exclude_wordforms","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Exclude Wordforms"}},{"name":"authorization","in":"header","required":false,"schema":{"title":"Authorization"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"array","items":{},"title":"Response Generate Inflection Table Inflectionrules Inflection Generate Inflection Table Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"EntriesByIdResponse":{"properties":{"total":{"type":"integer","title":"Total"},"hits":{"items":{"anyOf":[{"$ref":"#/components/schemas/EntryDto"},{}]},"type":"array","title":"Hits"}},"type":"object","required":["total","hits"],"title":"EntriesByIdResponse"},"EntryAdd":{"properties":{"entry":{"type":"object","title":"Entry"},"message":{"type":"string","title":"Message","default":""}},"type":"object","required":["entry"],"title":"EntryAdd"},"EntryAddResponse":{"properties":{"newID":{"type":"string","title":"Newid","examples":["01BJQMF54D093DXEAWZ6JYRPAQ"]}},"type":"object","required":["newID"],"title":"EntryAddResponse"},"EntryDiffDto":{"properties":{"diff":{"title":"Diff"},"fromVersion":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Fromversion"},"toVersion":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Toversion"}},"type":"object","required":["diff","fromVersion","toVersion"],"title":"EntryDiffDto"},"EntryDto":{"properties":{"id":{"type":"string","title":"Id","examples":["01BJQMF54D093DXEAWZ6JYRPAQ"]},"version":{"type":"integer","title":"Version"},"lastModified":{"type":"number","title":"Lastmodified"},"lastModifiedBy":{"type":"string","title":"Lastmodifiedby"},"message":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Message"},"discarded":{"type":"boolean","title":"Discarded","default":false},"resource":{"type":"string","title":"Resource"},"entry":{"type":"object","title":"Entry"}},"type":"object","required":["id","version","lastModified","lastModifiedBy","resource","entry"],"title":"EntryDto"},"EntryOp":{"type":"string","enum":["ADDED","DELETED","UPDATED"],"title":"EntryOp"},"EntryPreview":{"properties":{"entry":{"type":"object","title":"Entry"}},"type":"object","required":["entry"],"title":"EntryPreview"},"EntryPreviewResponse":{"properties":{"entry":{"type":"object","title":"Entry"}},"type":"object","required":["entry"],"title":"EntryPreviewResponse"},"EntryUpdate":{"properties":{"entry":{"type":"object","title":"Entry"},"message":{"type":"string","title":"Message"},"version":{"type":"integer","title":"Version"}},"type":"object","required":["entry","message","version"],"title":"EntryUpdate"},"Field":{"properties":{"type":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Type"},"required":{"type":"boolean","title":"Required","default":false},"collection":{"type":"boolean","title":"Collection","default":false},"virtual":{"type":"boolean","title":"Virtual","default":false},"plugin":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Plugin"},"params":{"type":"object","title":"Params","default":{}},"fieldParams":{"additionalProperties":{"type":"string"},"type":"object","title":"Fieldparams","default":{}},"fields":{"anyOf":[{"additionalProperties":{"$ref":"#/components/schemas/Field"},"type":"object"},{"type":"null"}],"title":"Fields"},"skipRaw":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Skipraw","default":false},"additionalProperties":{"type":"boolean","title":"Additionalproperties","default":true}},"additionalProperties":false,"type":"object","title":"Field"},"GetHistoryDto":{"properties":{"history":{"items":{"$ref":"#/components/schemas/HistoryDto"},"type":"array","title":"History"},"total":{"type":"integer","title":"Total"}},"type":"object","required":["history","total"],"title":"GetHistoryDto"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"HistoryDto":{"properties":{"id":{"type":"string","title":"Id","examples":["01BJQMF54D093DXEAWZ6JYRPAQ"]},"timestamp":{"type":"number","title":"Timestamp"},"message":{"type":"string","title":"Message"},"version":{"type":"integer","title":"Version"},"op":{"$ref":"#/components/schemas/EntryOp"},"userId":{"type":"string","title":"Userid"},"diff":{"items":{"type":"object"},"type":"array","title":"Diff"},"entry":{"type":"object","title":"Entry"}},"type":"object","required":["id","timestamp","message","version","op","userId","diff","entry"],"title":"HistoryDto"},"QueryResponse":{"properties":{"total":{"type":"integer","title":"Total"},"hits":{"items":{"anyOf":[{"$ref":"#/components/schemas/EntryDto"},{}]},"type":"array","title":"Hits"},"distribution":{"anyOf":[{"additionalProperties":{"type":"integer"},"type":"object"},{"type":"null"}],"title":"Distribution"}},"type":"object","required":["total","hits","distribution"],"title":"QueryResponse"},"QueryStatsResponse":{"properties":{"total":{"type":"integer","title":"Total"},"distribution":{"additionalProperties":{"type":"integer"},"type":"object","title":"Distribution"}},"type":"object","required":["total","distribution"],"title":"QueryStatsResponse"},"ResourceConfig":{"properties":{"resourceId":{"type":"string","title":"Resourceid"},"resourceName":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Resourcename"},"fields":{"additionalProperties":{"$ref":"#/components/schemas/Field"},"type":"object","title":"Fields"},"plugins":{"additionalProperties":{"additionalProperties":{"type":"string"},"type":"object"},"type":"object","title":"Plugins","default":{}},"sort":{"anyOf":[{"type":"string"},{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Sort"},"protected":{"additionalProperties":{"type":"boolean"},"type":"object","title":"Protected","default":{}},"id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Id"},"additionalProperties":{"type":"boolean","title":"Additionalproperties","default":true},"configStr":{"type":"string","title":"Configstr"}},"additionalProperties":false,"type":"object","required":["resourceId","fields","configStr"],"title":"ResourceConfig"},"ResourcePermissionDto":{"properties":{"resource_id":{"type":"string","title":"Resource Id"},"protected":{"anyOf":[{"$ref":"#/components/schemas/Scope"},{"type":"null"}]}},"type":"object","required":["resource_id","protected"],"title":"ResourcePermissionDto"},"ResourceProtected":{"properties":{"id":{"type":"string","title":"Id","examples":["01BJQMF54D093DXEAWZ6JYRPAQ"]},"resourceId":{"type":"string","title":"Resourceid"},"name":{"type":"string","title":"Name"},"config":{"$ref":"#/components/schemas/ResourceConfig"},"message":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Message"},"lastModified":{"type":"number","title":"Lastmodified"},"isPublished":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Ispublished"},"version":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Version"},"lastModifiedBy":{"type":"string","title":"Lastmodifiedby"}},"type":"object","required":["id","resourceId","name","config","lastModified","lastModifiedBy"],"title":"ResourceProtected"},"ResourcePublic":{"properties":{"id":{"type":"string","title":"Id","examples":["01BJQMF54D093DXEAWZ6JYRPAQ"]},"resourceId":{"type":"string","title":"Resourceid"},"name":{"type":"string","title":"Name"},"config":{"$ref":"#/components/schemas/ResourceConfig"},"message":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Message"},"lastModified":{"type":"number","title":"Lastmodified"},"isPublished":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Ispublished"},"version":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Version"}},"type":"object","required":["id","resourceId","name","config","lastModified"],"title":"ResourcePublic"},"Scope":{"type":"string","enum":["ADMIN","WRITE","READ"],"title":"Scope"},"StatisticsDto":{"properties":{"value":{"anyOf":[{"type":"string"},{}],"title":"Value"},"count":{"type":"integer","title":"Count"}},"type":"object","required":["value","count"],"title":"StatisticsDto"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}},"securitySchemes":{"APIKeyQuery":{"type":"apiKey","in":"query","name":"api_key"},"HTTPBearer":{"type":"http","scheme":"bearer"}}},"tags":[{"name":"Querying","description":"\n## Query DSL\n### Query operators\n- `contains|<field>|<string>` Find all entries where the field <field> contains <string>. More premissive than equals.\n\n- `endswith|<field>|<string>` Find all entries where the field <field> ends with <string>\n\n- `equals|<field>|<string>` Find all entries where <field> equals <string>. Stricter than contains\n\n- `exists|<field>` Find all entries that has the field <field>.\n\n- `freetext|<string>` Search in all fields for <string> and similar values.\n\n- `gt|<field>|<value>` Find all entries where <field> is greater than <value>.\n\n- `gte|<field>|<value>` Find all entries where <field> is greater than or equals <value>.\n\n- `lt|<field>|<value>` Find all entries where <field> is less than <value>.\n\n- `lte|<field>|<value>` Find all entries where <field> is less than or equals <value>.\n\n- `missing|<field>` Search for all entries that doesn't have the field <field>.\n\n- `regexp|<field>|<regex.*>` Find all entries where the field <field> matches the regex <regex.*>.\n\n- `startswith|<field>|<string>` Find all entries where <field>starts with <string>.\n\n### Logical Operators\nThe logical operators can be used both at top-level and lower-levels.\n\n- `not(<expression1>||<expression2>||...)` Find all entries that doesn't match the expression <expression>.\n\n- `and(<expression1>||<expression2>||...)` Find all entries that matches <expression1> AND <expression2>.\n\n- `or(<expression1>||<expression2>||...)` Find all entries that matches <expression1> OR <expression2>.\n\n### Sub-queries - searching in collections of objects\n\nUsed for fields with setting `collection: true` and that contain other fields (collection of objects). Boolean queries\nsuch as: `and(equals|my_field.x|1||equals|my_field.y|3)` will find entries where objects in `my_field` \nmatch `equals|x|1` or `equals|y|3`, or both. To find entries where an individual object in `my_field` matches a boolean query, \nwrap the query with the sub-query notation: `my_field(and(equals|x|1||equals|y|3))`.\n\n- `<field>(expression)` Do `<expression>` on objects inside `<field>`. `<field>` must be a collection. \n\n### Regular expressions\nAlways matches complete tokens.\n\n###  Examples\n- `not(missing|pos)`\n- `and(freergxp|str.*ng||regexp|pos|str.*ng)`\n- `and(missing|pos||equals|wf||or|blomma|√§pple`\n- `and(equals|wf|sitta||not||equals|wf|satt`\n"},{"name":"Editing"},{"name":"Statistics"},{"name":"History"},{"name":"Resources"}]}